name: "hey"

on:
  push:
     branches:
      - master

  workflow_dispatch:
    inputs:
      version:
        required: false
        type: string
env:
  HELM_EXPERIMENTAL_OCI: 1

permissions:
  contents: write
  pull-requests: write

jobs:
  chart-update:
    runs-on: ubuntu-latest
    steps:         
      - uses: actions/checkout@v2
        name: checkout repo

      - name: Run Match Version Script
        id: input_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ inputs.version }} python .github/scripts/bump-copy.py ${{ secrets.GITHUB_TOKEN }} 
      
      - name: get sha
        id: sha
        run: |
          sha_new=$(git rev-parse HEAD)
          echo $sha_new
          echo "::set-output name=SHA::$sha_new"
      
      - run:
            echo ${{ steps.sha.outputs.SHA }}

  build:
    name: publish acr
    runs-on: ubuntu-latest
    environment: prod
    needs: chart-update
    steps:    
      - uses: actions/checkout@v2
        name: checkout repo
        with:
          ref: ${{ needs.chart-update.outputs.new_sha }}

      - name: install helm
        uses: Azure/setup-helm@v1
        with:
          version: 'v3.6.3'

      - name: login to acr using helm
        run: |
          helm registry login ${{ secrets.ACR_URL }} --username ${{ secrets.ACR_PUSH_USER }} --password ${{ secrets.ACR_PUSH_TOKEN }} 

      - name: Get Chart name
        id: get_chart
        run: |
          export "CHART=$(cat Chart.yaml | grep name | awk '{print $2; exit}')"
          echo "CHART=$CHART" >> $GITHUB_ENV
        working-directory: ./helm

      - name: Get version name
        id: get_version
        run: |
          export "VER=$(cat Chart.yaml | grep version | awk '{print $2; exit}')"
          echo "VER=$VER" >> $GITHUB_ENV
        working-directory: ./helm


      - name: save helm chart to local registry
        run: |
          helm chart save . '${{ secrets.ACR_URL }}/helm/${{ env.CHART }}:${{ env.VER }}'
        working-directory: ./helm
      
      - name: publish chart to acr
        run: |
          helm chart push ${{ secrets.ACR_URL }}/helm/${{ env.CHART }}:${{ env.VER }}
        working-directory: ./helm