name: Bump version

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq &&\
          chmod +x yq

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=$(cat Chart.yaml | grep version | awk '{print $2}')"
          echo "$VERSION" >> $GITHUB_OUTPUT

      - name: Commit Chart.yaml
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'chore(release) bump version to ${{ steps.get_version.outputs.VERSION }}'
          file_pattern: 'Chart.yaml'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.6.3'
      
      - name: Get chart name
        id: get_chart_name
        run: |
          CHART_NAME=$(cat Chart.yaml | grep name | awk '{print $2}')
          echo "CHART_NAME=$CHART_NAME" >> $GITHUB_ENV

#      - name: Package Helm Chart
#        run: |
#          CHART_NAME=${{ env.CHART_NAME }}
#          helm package --version $VERSION --app-version $VERSION --destination . $CHART_NAME
#          echo "HELM_PACKAGE_NAME=${CHART_NAME}-${VERSION}.tgz" >> $GITHUB_ENV

      - name: Package Helm Chart
        run: |
          helm package . ${{ env.CHART_NAME }} --version ${{ steps.get_version.outputs.VERSION }} .

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_PUSH_USER }}
          password: ${{ secrets.ACR_PUSH_TOKEN }}

      - name: Push to ACR
        run: |
          HELM_PACKAGE_NAME=${{ env.HELM_PACKAGE_NAME }}
          docker tag $HELM_PACKAGE_NAME ${{ secrets.ACR_URL }}/helm/michal:$HELM_PACKAGE_NAME
          docker push ${{ secrets.ACR_URL }}/helm/michal:$HELM_PACKAGE_NAME


